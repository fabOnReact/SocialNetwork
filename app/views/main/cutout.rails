<%= form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>
  <div class="field">
    <%= f.label :email %><br />
    <%= f.email_field :email, autofocus: true %>
  </div>

  <div class="field">
    <%= f.label :password %><br />
    <%= f.password_field :password, autocomplete: "off" %>
  </div>

  <% if devise_mapping.rememberable? -%>
    <div class="field">
      <%= f.check_box :remember_me %>
      <%= f.label :remember_me %>
    </div>
  <% end -%>

  <div class="actions">
    <%= f.submit "Log in" %>
  </div>
<% end %>

<%= render "devise/shared/links" %>

<form class="login-form">        
  <div class="login-wrap">
  <%= form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>
      <p class="login-img"><i class="icon_lock_alt"></i></p>
      <div class="field">
      </div>      
      <div class="input-group">
        <span class="input-group-addon"><i class="icon_profile"></i></span>
        <%= f.label :email %><br />
        <%= f.email_field :email, autofocus: true, :class => "form-control", :placeholder => "Username" %>
        <!--<input type="text" class="form-control" placeholder="Username" autofocus>-->
      </div>
      <div class="input-group">
          <span class="input-group-addon"><i class="icon_key_alt"></i></span>
          <%= f.label :password %><br />
          <%= f.password_field :password, autocomplete: "off", :class => "form-control", :placeholder => "Password" %>
      </div>
      <% if devise_mapping.rememberable? -%>
      <label class="checkbox">
          <%= f.check_box :remember_me %> 
          <%= f.label :remember_me, :class => "remember_me_Label" %>
          <span class="pull-right"> <%= link_to "Forgot Password?", {}, :id => "lostPw" %></span>
      </label>
      <% end -%>      
      <%= f.submit "Login", :class => "btn btn-primary btn-lg btn-block" %>
      <%= link_to "Signup", new_registration_path(resource_name), :method => :get, class: "btn btn-info btn-lg btn-block signuptext" %>
      <% end %>
      <div class="links ">
      <%= render "devise/shared/links2" %>
      </div>
  </div>
</form>

<div class="text-right">
        <div class="credits">
            <!-- 
                All the links in the footer should remain intact. 
                You can delete the links only if you purchased the pro version.
                Licensing information: https://bootstrapmade.com/license/
                Purchase the pro version form: https://bootstrapmade.com/buy/?theme=NiceAdmin
            -->
            <a href="https://bootstrapmade.com/free-business-bootstrap-themes-website-templates/">Business Bootstrap Themes</a> by <a href="https://bootstrapmade.com/">BootstrapMade</a>
        </div>
    </div>
</div>

<%= form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>
  <div class="field">
    <%= f.label :email %><br />
    <%= f.email_field :email, autofocus: true %>
  </div>

  <div class="field">
    <%= f.label :password %><br />
    <%= f.password_field :password, autocomplete: "off" %>
  </div>

  <% if devise_mapping.rememberable? -%>
    <div class="field">
      <%= f.check_box :remember_me %>
      <%= f.label :remember_me %>
    </div>
  <% end -%>

  <div class="actions">
    <%= f.submit "Log in" %>
  </div>
<% end %>

<%= render "devise/shared/links" %>


<h2>Sign up</h2>
<%#= link_to "Sign in with Facebook", user_facebook_omniauth_authorize_path %>
<%= form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
  <%= devise_error_messages! %>

  <div class="field">
    <%= f.label :email %><br />
    <%= f.email_field :email, autofocus: true %>
  </div>

  <div class="field">
    <%= f.label :password %>
    <% if @minimum_password_length %>
    <em>(<%= @minimum_password_length %> characters minimum)</em>
    <% end %><br />
    <%= f.password_field :password, autocomplete: "off" %>
  </div>

  <div class="field">
    <%= f.label :password_confirmation %><br />
    <%= f.password_field :password_confirmation, autocomplete: "off" %>
  </div>

  <div class="actions">
    <%= f.submit "Sign up" %>
  </div>
<% end %>

<%= render "devise/shared/links" %>


class Account::RegistrationsController < Devise::RegistrationsController
 before_action :configure_sign_up_params, only: [:create]
 before_action :configure_account_update_params, only: [:update]

  # GET /resource/sign_up
   def new
     super
   end

  # POST /resource
   def create
    super
   end

  # GET /resource/edit
  # def edit
  #   super
  # endafter_sign_up_path_for(resource)

  # PUT /resource
  # def update
  #   super
  # end

  # DELETE /resource
   def destroy
     super
   end

  # GET /resource/cancel
  # Forces the session data which is usually expired after sign
  # in to be expired now. This is useful if the user wants to
  # cancel oauth signing in/up in the middle of the process,
  # removing all OAuth session data.
   def cancel
     super
   end

  protected

  # If you have extra params to permit, append them to the sanitizer.
   def configure_sign_up_params
    binding.pry
     devise_parameter_sanitizer.permit(:sign_up, keys: [:firstname, :lastname, :country, :location, :role, :email, :email_confirmation, :password, :password_confirmation])
  #   devise_parameter_sanitizer.permit(:sign_up, keys: [:attribute])
   end

  # If you have extra params to permit, append them to the sanitizer.
   def configure_account_update_params
     devise_parameter_sanitizer.permit(:account_update,  keys: [:firstname, :lastname, :country, :location, :role, :email, :email_confirmation, :password, :password_confirmation])
  #   devise_parameter_sanitizer.permit(:account_update, keys: [:attribute])
   end

  # The path used after sign up.
   def after_sign_up_path_for(resource)
     super(resource)
      #main_home_path(resource)
   end

  # The path used after sign up for inactive accounts.
  # def after_inactive_sign_up_path_for(resource)
  #   super(resource)
  # end

end



class Account::SessionsController < Devise::SessionsController
 before_action :configure_sign_in_params, only: [:create]
  # GET /resource/sign_in
   def new
    binding.pry
    super
    #self.resource = resource_class.new(sign_in_params)
    #clean_up_passwords(resource)
    #yield resource if block_given?
    #respond_with(resource, serialize_options(resource))
   end

  # POST /resource/sign_in
   def create
    binding.pry
      super
   end

  # DELETE /resource/sign_out
   #def destroy
    # super
   #end

  #protected

  # If you have extra params to permit, append them to the sanitizer.
   #def configure_sign_in_params
    #binding.pry
    #devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])
    #devise_parameter_sanitizer.permit(:sign_in, keys: [:email, :password])
   #end
     
end