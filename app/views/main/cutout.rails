class Account::RegistrationsController < Devise::RegistrationsController
 before_action :configure_sign_up_params, only: [:create]
 before_action :configure_account_update_params, only: [:update]

  # GET /resource/sign_up
   def new
     super
   end

  # POST /resource
   def create
    super
   end

  # GET /resource/edit
  # def edit
  #   super
  # endafter_sign_up_path_for(resource)

  # PUT /resource
  # def update
  #   super
  # end

  # DELETE /resource
   def destroy
     super
   end

  # GET /resource/cancel
  # Forces the session data which is usually expired after sign
  # in to be expired now. This is useful if the user wants to
  # cancel oauth signing in/up in the middle of the process,
  # removing all OAuth session data.
   def cancel
     super
   end

  protected

  # If you have extra params to permit, append them to the sanitizer.
   def configure_sign_up_params
    binding.pry
     devise_parameter_sanitizer.permit(:sign_up, keys: [:firstname, :lastname, :country, :location, :role, :email, :email_confirmation, :password, :password_confirmation])
  #   devise_parameter_sanitizer.permit(:sign_up, keys: [:attribute])
   end

  # If you have extra params to permit, append them to the sanitizer.
   def configure_account_update_params
     devise_parameter_sanitizer.permit(:account_update,  keys: [:firstname, :lastname, :country, :location, :role, :email, :email_confirmation, :password, :password_confirmation])
  #   devise_parameter_sanitizer.permit(:account_update, keys: [:attribute])
   end

  # The path used after sign up.
   def after_sign_up_path_for(resource)
     super(resource)
      #main_home_path(resource)
   end

  # The path used after sign up for inactive accounts.
  # def after_inactive_sign_up_path_for(resource)
  #   super(resource)
  # end

end



class Account::SessionsController < Devise::SessionsController
 before_action :configure_sign_in_params, only: [:create]
  # GET /resource/sign_in
   def new
    binding.pry
    super
    #self.resource = resource_class.new(sign_in_params)
    #clean_up_passwords(resource)
    #yield resource if block_given?
    #respond_with(resource, serialize_options(resource))
   end

  # POST /resource/sign_in
   def create
    binding.pry
      super
   end

  # DELETE /resource/sign_out
   #def destroy
    # super
   #end

  #protected

  # If you have extra params to permit, append them to the sanitizer.
   #def configure_sign_in_params
    #binding.pry
    #devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])
    #devise_parameter_sanitizer.permit(:sign_in, keys: [:email, :password])
   #end
     
end